to-do:

1. Burger menu (
  --плавный переход, 
  --все навигационныйе ссылки если нажать на любую навигационный кнопку он должен закрыться, 
  --если будет измененине ширины открытые меню должен закрыться)
2. Слайдер

3. Burger menu for mobile 599px and less

4. FAQ
















function generateSlider() {
  const sliderContent = document.querySelector(".slider-content");

  fetch("assets/infoSlider.json")
    .then((response) => response.json())
    .then((data) => {
      const reviews = data.reviews;
      const allCards = [];
      const allDots = [];
      let activeIndex = 0;
      let autoSlideInterval;

      reviews.forEach((review, index) => {
        const sliderCard = document.createElement("div");
        sliderCard.classList.add("slider-card");
        if (index === 0) sliderCard.classList.add("active");
        allCards.push(sliderCard);

        const infoContainer = document.createElement("div");
        infoContainer.classList.add("slider-info-container");

        const rating = document.createElement("div");
        rating.classList.add("slider-rating");
        rating.innerHTML = `<img src="${review.reviewStar}" alt="Rating stars" class="slider-stars"/>`;

        const reviewText = document.createElement("div");
        reviewText.classList.add("slider-review");
        reviewText.innerHTML = `<h2 class="slider-h2">${review.reviewText}</h2>`;

        const info = document.createElement("div");
        info.classList.add("slider-info");
        info.innerHTML = `
          <p class="slider-name">${review.reviewName}</p>
          <p class="slider-work">${review.reviewJob}</p>
        `;

        const sliderDots = document.createElement("div");
        sliderDots.classList.add("slider-scroll");

        reviews.forEach((_, dotIndex) => {
          const dot = document.createElement("span");
          dot.classList.add("dot");
          if (dotIndex === index) dot.classList.add("active");

          dot.addEventListener("click", () => {
            changeSlide(dotIndex);
          });

          sliderDots.appendChild(dot);
        });

        allDots.push(Array.from(sliderDots.children));

        infoContainer.appendChild(rating);
        infoContainer.appendChild(reviewText);
        infoContainer.appendChild(info);
        infoContainer.appendChild(sliderDots);

        const imageContainer = document.createElement("div");
        imageContainer.classList.add("slider-slider-image");
        const image = document.createElement("img");
        image.src = review.reviewImage;
        image.alt = "Review Image";
        image.classList.add("slider-image");
        imageContainer.appendChild(image);

        sliderCard.appendChild(infoContainer);
        sliderCard.appendChild(imageContainer);

        sliderContent.appendChild(sliderCard);
      });

      function changeSlide(index) {
        allCards.forEach((card) => card.classList.remove("active"));
        allDots.forEach((dotList) =>
          dotList.forEach((dot) => dot.classList.remove("active"))
        );

        allCards[index].classList.add("active");
        allDots.forEach((dotList) => dotList[index].classList.add("active"));
        activeIndex = index;
      }

      function startAutoSlide() {
        autoSlideInterval = setInterval(() => {
          activeIndex = (activeIndex + 1) % reviews.length;
          changeSlide(activeIndex);
        }, 3000); // Change slide every 3 seconds
      }

      function stopAutoSlide() {
        clearInterval(autoSlideInterval);
      }

      // Start the auto-slide when the page loads
      startAutoSlide();

      // Pause the slider on hover or touch
      sliderContent.addEventListener("mouseenter", stopAutoSlide);
      sliderContent.addEventListener("mouseleave", startAutoSlide);

      // Handle touch events for mobile devices
      let touchStartTime = 0;
      sliderContent.addEventListener("touchstart", (e) => {
        touchStartTime = Date.now();
        stopAutoSlide();
      });
      sliderContent.addEventListener("touchend", () => {
        const touchEndTime = Date.now();
        if (touchEndTime - touchStartTime < 500) {
          startAutoSlide();
        }
      });
    })
    .catch((error) => {
      console.error("Error fetching slider data:", error);
    });
}





















































.about-content {
    width: 375px;
    height: 1414px;
  }

  .about-header {
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 0;
    width: 375px;
    height: 198px;
  }

  .about-h3 {
    width: 343px;
    height: 20px;
    font-size: 14px;
    line-height: 20px;
    margin: 0;
    padding: 0;
  }

  .about-h2 {
    /* width: 343px;
    height: 38px; */
    font-size: 30px;
    line-height: 38px;
    text-align: center;
  }

  .about-p {
    width: 343px;
    height: 112px;
    font-size: 18px;
    line-height: 28px;
    text-align: center;




    Burger menu


  main {
    width: calc(100% - 240px);
    max-width: 680px;
    /* margin: 100px auto; */
  }

  p {
    font-size: 18px;
    line-height: 28px;
  }

  * {
    scroll-behavior: smooth;
  }

  .menuToggle {
    display: block;
    position: fixed;
    top: 50px;
    right: 50px;
    z-index: 1;
    -webkit-user-select: none;
    user-select: none;
  }

  .menuToggle a {
    text-decoration: none;
    color: #232323;

    transition: color 0.3s ease;
  }

  .menuToggle a:hover {
    color: tomato;
  }

  .menuToggle input {
    display: block;
    width: 40px;
    height: 32px;
    position: absolute;
    top: -7px;
    left: -5px;

    cursor: pointer;

    opacity: 0; /* hide this */
    z-index: 2; /* and place it over the hamburger */

    -webkit-touch-callout: none;
  }

  /*
 * Just a quick hamburger
 */
  .menuToggle span {
    display: block;
    width: 33px;
    height: 4px;
    margin-bottom: 5px;
    position: relative;

    background: #cdcdcd;
    border-radius: 3px;

    z-index: 1;

    transform-origin: 4px 0px;

    transition: transform 0.5s cubic-bezier(0.77, 0.2, 0.05, 1),
      background 0.5s cubic-bezier(0.77, 0.2, 0.05, 1), opacity 0.55s ease;
  }

  .menuToggle span:first-child {
    transform-origin: 0% 0%;
  }

  .menuToggle span:nth-last-child(2) {
    transform-origin: 0% 100%;
  }

  /* 
 * Transform all the slices of hamburger
 * into a crossmark.
 */
  .menuToggle input:checked ~ span {
    opacity: 1;
    transform: rotate(45deg) translate(-2px, -1px);
    background: #232323;
  }

  /*
 * But let's hide the middle one.
 */
  .menuToggle input:checked ~ span:nth-last-child(3) {
    opacity: 0;
    transform: rotate(0deg) scale(0.2, 0.2);
  }

  /*
 * Ohyeah and the last one should go the other direction
 */
  .menuToggle input:checked ~ span:nth-last-child(2) {
    opacity: 1;
    transform: rotate(-45deg) translate(0, -1px);
  }

  /*
 * Make this absolute positioned
 * at the top left of the screen
 */
  #menu {
    position: absolute;
    max-width: 400px;
    width: 100vw;
    max-height: 100vh;
    margin: -100px 0 0 0;
    padding: 50px;
    padding-top: 125px;
    right: -100px;

    box-sizing: border-box;
    overflow-y: auto;
    background: #ededed;
    list-style-type: none;

    -webkit-font-smoothing: antialiased;
    /* to stop flickering of text in safari */

    transform-origin: 0% 0%;
    transform: translate(100%, 0);

    transition: transform 0.5s cubic-bezier(0.77, 0.2, 0.05, 1);
  }

  #menu li {
    padding: 10px 0;
    font-size: 22px;
  }

  #menu li label {
    cursor: pointer;
  }

  /*
 * And let's fade it in from the right
 */
  #menuToggle input:checked ~ ul {
    transform: none;
    opacity: 1;
  }


  Mobile Media
  body {
    margin: 0;
    /* padding: 0 15px; */
    height: auto;
  }

  .container {
    width: 100%;
  }

  header {
    position: sticky;
    top: 0;
    z-index: 1000;
    margin: 0;
    padding: 0;
  }

  .header-content {
    padding: 0px 15px;
    margin: 0;
    width: 375px;
    height: 72px;
  }

  .applet {
    font-size: 20px;
    line-height: 24px;
  }

  .icon {
    margin: 0;
  }

  .hero-content {
    display: flex;
    flex-direction: row;
    align-items: flex-start;

    padding: 0px;
    width: 375px;
    height: 372px;
    margin: 90px 0px;
  }

  .hero-img img {
    display: none;
  }

  .hero-with-btn {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    padding: 0px 15px;
    gap: 32px;
    width: 343px;
    height: 372px;
  }

  .hero-text {
    width: auto;
    height: 232px;
    gap: 18px;
  }

  .hero-title {
    width: 343px;
    height: 132px;
    font-family: "Inter";
    font-style: normal;
    font-weight: 600;
    font-size: 36px;
    line-height: 44px;
  }
  .hero-p {
    width: 343px;
    height: 84px;
    min-height: 84px;
    font-weight: 400;
    font-size: 18px;
    line-height: 28px;
    letter-spacing: 0.2px;
  }
  .hero-btns {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    padding: 0px;
    gap: 12px;
    width: 343px;
    height: 108px;
  }

  .contact-button,
  .projects-button {
    padding: 12px 18px;
    width: 343px;
    height: 48px;
    letter-spacing: -0.1px;
    font-family: "Inter";
    font-style: normal;
    font-weight: 600;
    font-size: 16px;
    line-height: 24px;
  }
  .navigation {
    display: none;
  }
  .navigation1 {
    display: none;
  }

  
  /*<!-- ========================= -->
  <!--           ABOUT           -->
  <!-- ========================= -->*/

  .about-content {
    display: flex;
    width: 375px;
    height: 1414px;
    align-items: center;
    justify-content: flex-start;
    margin: 0;
    padding: 0;
  }

  .about-header {
    height: 198px;
    width: 375px;
    margin-top: 37px;
    margin-bottom: 67px;
  }
  .about-h3 {
    width: 375px;
    height: 20px;
    font-weight: 600;
    font-size: 14px;
    line-height: 20px;
    text-align: center;
    margin-left: -30px;
    padding: 0;
    margin: 0;
  }
  .about-h2 {
    width: 343px;
    height: 38px;
    font-weight: 600;
    font-size: 30px;
    line-height: 38px;
    text-align: center;
    letter-spacing: 0.7px;
  }
  .about-p {
    width: 343px;
    max-width: 343px;
    height: 112px;
    max-height: 112px;
    font-size: 17px;
    line-height: 30px;
    font-weight: 500;
    text-wrap: balance;
    padding: 0;
    margin: 0;
  }

  .about-cards {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    padding: 0px;
    margin: 0;
    width: 343px;
    /* gap: 40px; */
    height: 1040px;
  }

  .about-card {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 0px;
    margin: 0;
    width: 343px;
    min-width: 343px;
    height: 136px;
    /* gap: 45px; */
  }

  .about-cards .about-card img {
    width: 40px;
    height: 40px;
  }
  .about-icon h3 {
    width: 343px;
    height: 28px;
    font-weight: 600;
    font-size: 18px;
    line-height: 28px;
    text-align: center;
    letter-spacing: -0.1px;
    padding: 0;
    margin: 0;
  }

  .about-cards .about-card .about-icon p {
    height: 48px;
    font-style: normal;
    font-weight: 400;
    font-size: 16px;
    line-height: 24px;
    text-align: center;
    padding: 0;
    margin: 0;
    /* text-wrap: balance; */
  }

  <nav role="navigation" class="navigation1">
  <div class="menuToggle">
    <input type="checkbox" id="menuCheckbox" />
    <span></span>
    <span></span>
    <span></span>
    <ul id="menu">
      <li>
        <a href="#about">
          <label for="menuCheckbox" onclick="this.parentNode.click();">About</label>
        </a>
      </li>
      <li>
        <a href="#projects">
          <label for="menuCheckbox" onclick="this.parentNode.click();">Projects</label>
        </a>
      </li>
      <li>
        <a href="#faq">
          <label for="menuCheckbox" onclick="this.parentNode.click();">FAQ</label>
        </a>
      </li>
      <li>
        <a href="#contacts">
          <label for="menuCheckbox" onclick="this.parentNode.click();">Contacts</label>
        </a>
      </li>
    </ul>
    <div class="menuToggle-social">
      <ul id="menu-social">
        <li>
          <a href="https://www.threads.net/" target="_blank"><svg width="24" height="24" viewBox="0 0 24 24"
              fill="none" xmlns="http://www.w3.org/2000/svg">
              <path fill-rule="evenodd" clip-rule="evenodd"
                d="M15.9455 23L10.396 15.0901L3.44886 23H0.509766L9.09209 13.2311L0.509766 1H8.05571L13.286 8.45502L19.8393 1H22.7784L14.5943 10.3165L23.4914 23H15.9455ZM19.2185 20.77H17.2398L4.71811 3.23H6.6971L11.7121 10.2532L12.5793 11.4719L19.2185 20.77Z"
                fill="#E9D7FE" />
            </svg>
          </a>
        </li>
        <li>
          <a href="https://ru.linkedin.com/" target="_blank"><svg width="24" height="24" viewBox="0 0 24 24"
              fill="none" xmlns="http://www.w3.org/2000/svg">
              <g clip-path="url(#clip0_4064_3971)">
                <path
                  d="M22.2234 0H1.77187C0.792187 0 0 0.773438 0 1.72969V22.2656C0 23.2219 0.792187 24 1.77187 24H22.2234C23.2031 24 24 23.2219 24 22.2703V1.72969C24 0.773438 23.2031 0 22.2234 0ZM7.12031 20.4516H3.55781V8.99531H7.12031V20.4516ZM5.33906 7.43438C4.19531 7.43438 3.27188 6.51094 3.27188 5.37187C3.27188 4.23281 4.19531 3.30937 5.33906 3.30937C6.47813 3.30937 7.40156 4.23281 7.40156 5.37187C7.40156 6.50625 6.47813 7.43438 5.33906 7.43438ZM20.4516 20.4516H16.8937V14.8828C16.8937 13.5562 16.8703 11.8453 15.0422 11.8453C13.1906 11.8453 12.9094 13.2937 12.9094 14.7891V20.4516H9.35625V8.99531H12.7687V10.5609H12.8156C13.2891 9.66094 14.4516 8.70938 16.1813 8.70938C19.7859 8.70938 20.4516 11.0813 20.4516 14.1656V20.4516Z"
                  fill="#E9D7FE" />
              </g>
              <defs>
                <clipPath id="clip0_4064_3971">
                  <rect width="24" height="24" fill="white" />
                </clipPath>
              </defs>
            </svg>
          </a>
        </li>
        <li>
          <a href="https://www.facebook.com/?locale=ru_RU" target="_blank"><svg width="24" height="24"
              viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
              <g clip-path="url(#clip0_4064_3974)">
                <path
                  d="M24 12C24 5.37258 18.6274 0 12 0C5.37258 0 0 5.37258 0 12C0 17.9895 4.3882 22.954 10.125 23.8542V15.4688H7.07812V12H10.125V9.35625C10.125 6.34875 11.9166 4.6875 14.6576 4.6875C15.9701 4.6875 17.3438 4.92188 17.3438 4.92188V7.875H15.8306C14.34 7.875 13.875 8.80008 13.875 9.75V12H17.2031L16.6711 15.4688H13.875V23.8542C19.6118 22.954 24 17.9895 24 12Z"
                  fill="#E9D7FE" />
              </g>
              <defs>
                <clipPath id="clip0_4064_3974">
                  <rect width="24" height="24" fill="white" />
                </clipPath>
              </defs>
            </svg>
          </a>
        </li>
        <li>
          <a href="https://github.com/" target="_blank"><svg width="24" height="24" viewBox="0 0 24 24"
              fill="none" xmlns="http://www.w3.org/2000/svg">
              <g clip-path="url(#clip0_4064_3976)">
                <path fill-rule="evenodd" clip-rule="evenodd"
                  d="M12 0C5.3724 0 0 5.3808 0 12.0204C0 17.3304 3.438 21.8364 8.2068 23.4252C8.8068 23.5356 9.0252 23.1648 9.0252 22.8456C9.0252 22.5612 9.0156 21.804 9.0096 20.802C5.6712 21.528 4.9668 19.1904 4.9668 19.1904C4.422 17.8008 3.6348 17.4312 3.6348 17.4312C2.5452 16.6872 3.7176 16.7016 3.7176 16.7016C4.9212 16.7856 5.5548 17.94 5.5548 17.94C6.6252 19.776 8.364 19.2456 9.0468 18.9384C9.1572 18.162 9.4668 17.6328 9.81 17.3328C7.146 17.0292 4.344 15.9972 4.344 11.3916C4.344 10.08 4.812 9.006 5.5788 8.166C5.4552 7.8624 5.0436 6.6396 5.6964 4.986C5.6964 4.986 6.7044 4.662 8.9964 6.2172C9.97532 5.95022 10.9853 5.81423 12 5.8128C13.02 5.8176 14.046 5.9508 15.0048 6.2172C17.2956 4.662 18.3012 4.9848 18.3012 4.9848C18.9564 6.6396 18.5436 7.8624 18.4212 8.166C19.1892 9.006 19.6548 10.08 19.6548 11.3916C19.6548 16.0092 16.848 17.0256 14.1756 17.3232C14.6064 17.694 14.9892 18.4272 14.9892 19.5492C14.9892 21.1548 14.9748 22.452 14.9748 22.8456C14.9748 23.1672 15.1908 23.5416 15.8004 23.424C18.19 22.6225 20.2672 21.0904 21.7386 19.0441C23.2099 16.9977 24.001 14.5408 24 12.0204C24 5.3808 18.6264 0 12 0Z"
                  fill="#E9D7FE" />
              </g>
              <defs>
                <clipPath id="clip0_4064_3976">
                  <rect width="24" height="24" fill="white" />
                </clipPath>
              </defs>
            </svg>
          </a>
        </li>
      </ul>
      <li>
        <input type="checkbox" id="theme-toggle" />
        <label for="theme-toggle" class="theme-switch">
          <img class="sun" src="assets/sun.svg" alt="Sun Icon" />
          <img class="moon" src="assets/moon.svg" alt="Moon Icon" />
        </label>
      </li>
    </div>
  </div>

</nav>